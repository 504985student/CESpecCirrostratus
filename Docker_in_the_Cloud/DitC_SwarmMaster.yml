Description: Cloudformation template that launches a build server as docker swarm master

Resources:
  CSPushPullUser:
    Type: AWS::IAM::User
    Properties:
      LoginProfile: 
        Password: password123
      UserName: CSBuildServer
      Tags: 
        - Key: Name
          Value: CSIAMUser

  DockerSwarmTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: DockerSwarmTemplate
      LaunchTemplateData:
        KeyName: vockey
        SecurityGroupIds: # Use SecurityGroupIds instead of SecurityGroups
          - !ImportValue CSNetworkDock:CSSecurityGroup
        InstanceType: t2.micro 
        ImageId: ami-0ebfd941bbafe70c6
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            sudo yum update -y
            sudo yum install -y docker
            sudo service docker start
            sudo service docker start
            sudo usermod -a -G docker ec2-user
            systemctl enable docker
            sudo chmod 666 /var/run/docker.sock
            sudo curl -SL https://github.com/docker/compose/releases/download/v2.29.6/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker swarm init

  DockerSwarmMasterInstance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate: 
        LaunchTemplateId: !Ref DockerSwarmTemplate
        Version: !GetAtt DockerSwarmTemplate.DefaultVersionNumber
      AvailabilityZone: !ImportValue CSNetworkDock:AvailabilityZone1
      SubnetId: !ImportValue CSNetworkDock:CSPubSubnet1
      Tags:
        - Key: Name
          Value: DockerSwarmMaster

  CSRepository: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: "cloudshirtrepository"
      EmptyOnDelete: true
      ImageScanningConfiguration: 
        ScanOnPush: true
      RepositoryPolicyText: 
        Version: "2012-10-17"
        Statement: 
          - Sid: AllowPushPull
            Effect: Allow
            Principal: 
              AWS: 
                - !GetAtt CSPushPullUser.Arn
            Action: 
            - "ecr:GetDownloadUrlForLayer"
            - "ecr:BatchGetImage"
            - "ecr:BatchCheckLayerAvailability"
            - "ecr:PutImage"
            - "ecr:InitiateLayerUpload"
            - "ecr:UploadLayerPart"
            - "ecr:CompleteLayerUpload"
      Tags:
        - Key: Name
          Value: cloudshirtrepository

Outputs:
  CSPushPullUserRef:
    Description: Reference to the IAM profile
    Value: !Ref CSPushPullUser
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", CSPushPullUser ] ]

  CSRepoRef:
    Description: Reference to the IAM profile
    Value: !Ref CSRepository
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", CSRepository ] ]
