Description: AutoScaling Group for Cloudshirt on Docker

Resources:

  CSAutoScalingLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: DockerSwarmWorkerTemplate
      LaunchTemplateData:
        KeyName: vockey
        InstanceType: t2.micro
        SecurityGroupIds:
          - !ImportValue CSNetworkDock:CSSecurityGroup # Importing Security Group from network.yaml
        ImageId: ami-0ebfd941bbafe70c6
        IamInstanceProfile:
          Name: LabRoleInstanceProfile  # Use the instance profile associated with LabRole
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y
            yum install -y docker
            service docker start
            usermod -aG docker ec2-user
            systemctl enable docker
            # Fetch the Swarm join token from SSM Parameter Store
            TOKEN=$(aws ssm get-parameter --name /docker/swarms/join-token --query Parameter.Value --output text --region us-east-1)
            # Replace <Swarm_Master_IP> with the actual private IP of the Swarm master
            SWARM_MASTER_IP=$(aws ssm get-parameter --name /docker/swarms/master-ip --query Parameter.Value --output text)
            docker swarm join --token $TOKEN $SWARM_MASTER_IP:2377

  CSLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: CS
      Subnets:
        - !ImportValue CSNetworkDock:CSPubSubnet1
        - !ImportValue CSNetworkDock:CSPubSubnet2
      SecurityGroups:
        - !ImportValue CSNetworkDock:CSSecurityGroup
      Tags:
        - Key: Name
          Value: CSLoadBalancer

  CSLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref CSLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref CSTargetGroup

  CSTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: CSTargetGroup
      VpcId: !ImportValue CSNetworkDock:CSVPC
      Port: 80
      Protocol: HTTP

  CSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref CSAutoScalingLaunchTemplate  # Correct reference to your Launch Template
        Version: !GetAtt CSAutoScalingLaunchTemplate.LatestVersionNumber  # Correct reference to the latest version
      DesiredCapacity: '2'
      MaxSize: '10'
      MinSize: '1'
      VPCZoneIdentifier:
        - !ImportValue CSNetworkDock:CSPubSubnet1
        - !ImportValue CSNetworkDock:CSPubSubnet2
      TargetGroupARNs:
        - !Ref CSTargetGroup

  CSScaleUP:  # scales up
    Type: AWS::AutoScaling::ScheduledAction
    Properties: 
      AutoScalingGroupName: !Ref CSAutoScalingGroup
      DesiredCapacity: '9' 
      MinSize: '1' 
      MaxSize: '10' 
      Recurrence: "0 22 * * *"  # Eastern Time
  
  CSScaleDown:  # scales down
    Type: AWS::AutoScaling::ScheduledAction
    Properties:
      AutoScalingGroupName: !Ref CSAutoScalingGroup
      DesiredCapacity: '2' 
      MinSize: '1' 
      MaxSize: '10' 
      Recurrence: "0 0 * * *"  # Eastern Time
